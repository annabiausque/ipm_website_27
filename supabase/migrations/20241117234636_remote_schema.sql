create table "public"."users_groups" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid not null,
    "group_id" bigint,
    "joined_at" timestamp with time zone not null default now(),
    "is_active" boolean not null
);


alter table "public"."users_groups" enable row level security;

alter table "public"."tasks" add column "created_by" uuid;

CREATE UNIQUE INDEX users_groups_pkey ON public.users_groups USING btree (id);

alter table "public"."users_groups" add constraint "users_groups_pkey" PRIMARY KEY using index "users_groups_pkey";

alter table "public"."tasks" add constraint "tasks_created_by_fkey" FOREIGN KEY (created_by) REFERENCES auth.users(id) not valid;

alter table "public"."tasks" validate constraint "tasks_created_by_fkey";

alter table "public"."users_groups" add constraint "users_groups_group_id_fkey" FOREIGN KEY (group_id) REFERENCES groups(id) not valid;

alter table "public"."users_groups" validate constraint "users_groups_group_id_fkey";

alter table "public"."users_groups" add constraint "users_groups_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."users_groups" validate constraint "users_groups_user_id_fkey";

grant delete on table "public"."users_groups" to "anon";

grant insert on table "public"."users_groups" to "anon";

grant references on table "public"."users_groups" to "anon";

grant select on table "public"."users_groups" to "anon";

grant trigger on table "public"."users_groups" to "anon";

grant truncate on table "public"."users_groups" to "anon";

grant update on table "public"."users_groups" to "anon";

grant delete on table "public"."users_groups" to "authenticated";

grant insert on table "public"."users_groups" to "authenticated";

grant references on table "public"."users_groups" to "authenticated";

grant select on table "public"."users_groups" to "authenticated";

grant trigger on table "public"."users_groups" to "authenticated";

grant truncate on table "public"."users_groups" to "authenticated";

grant update on table "public"."users_groups" to "authenticated";

grant delete on table "public"."users_groups" to "service_role";

grant insert on table "public"."users_groups" to "service_role";

grant references on table "public"."users_groups" to "service_role";

grant select on table "public"."users_groups" to "service_role";

grant trigger on table "public"."users_groups" to "service_role";

grant truncate on table "public"."users_groups" to "service_role";

grant update on table "public"."users_groups" to "service_role";


